// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: enrollment.sql

package db

import (
	"context"
)

const createEnrollment = `-- name: CreateEnrollment :one
insert into enrollment(
    student_id,
    course_id
)values(
    $1,
    $2
)returning id, student_id, course_id, created_date
`

type CreateEnrollmentParams struct {
	StudentID int64 `json:"student_id"`
	CourseID  int64 `json:"course_id"`
}

func (q *Queries) CreateEnrollment(ctx context.Context, arg CreateEnrollmentParams) (Enrollment, error) {
	row := q.db.QueryRowContext(ctx, createEnrollment, arg.StudentID, arg.CourseID)
	var i Enrollment
	err := row.Scan(
		&i.ID,
		&i.StudentID,
		&i.CourseID,
		&i.CreatedDate,
	)
	return i, err
}

const deleteEnrollment = `-- name: DeleteEnrollment :exec
delete from enrollment
where id=$1
`

func (q *Queries) DeleteEnrollment(ctx context.Context, id int64) error {
	_, err := q.db.ExecContext(ctx, deleteEnrollment, id)
	return err
}

const getEnrollment = `-- name: GetEnrollment :one
select id, student_id, course_id, created_date from enrollment
where id=$1 limit 1
`

func (q *Queries) GetEnrollment(ctx context.Context, id int64) (Enrollment, error) {
	row := q.db.QueryRowContext(ctx, getEnrollment, id)
	var i Enrollment
	err := row.Scan(
		&i.ID,
		&i.StudentID,
		&i.CourseID,
		&i.CreatedDate,
	)
	return i, err
}

const updateEnrollment = `-- name: UpdateEnrollment :one
update enrollment
    set student_id=$2,
        course_id=$3
where id=$1
returning id, student_id, course_id, created_date
`

type UpdateEnrollmentParams struct {
	ID        int64 `json:"id"`
	StudentID int64 `json:"student_id"`
	CourseID  int64 `json:"course_id"`
}

func (q *Queries) UpdateEnrollment(ctx context.Context, arg UpdateEnrollmentParams) (Enrollment, error) {
	row := q.db.QueryRowContext(ctx, updateEnrollment, arg.ID, arg.StudentID, arg.CourseID)
	var i Enrollment
	err := row.Scan(
		&i.ID,
		&i.StudentID,
		&i.CourseID,
		&i.CreatedDate,
	)
	return i, err
}
